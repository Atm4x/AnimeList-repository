<Window x:Class="AnimeList.Windows.ControlWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:AnimeList.Windows"
        mc:Ignorable="d"
        Title="AniList: Аниме список" Height="670" Width="1000" MinHeight="670" MinWidth="1000" WindowStartupLocation="CenterScreen" Background="{DynamicResource MidBrsh}" Closing="OnClosing">

    <Grid KeyDown="WindowKeyDownPreview" x:Name="WholeControlPanel" Loaded="WindowLoaded">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="1.5*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="6*"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>

        
        <Border Grid.Row="0" Grid.ColumnSpan="3" Background="{DynamicResource WindowBackgroundBrushColor}">
            <ScrollViewer VerticalScrollBarVisibility="Disabled">
                <StackPanel Orientation="Horizontal">
                    <StackPanel x:Name="Tabs" Orientation="Horizontal"></StackPanel>
                    <Border VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="15" Background="#5b5b5b" MouseDown="AddTab">
                        <TextBlock Text="+" Padding="5, 2, 5, 2" TextAlignment="Center" VerticalAlignment="Center" FontSize="16" Foreground="White" ></TextBlock>
                    </Border>
                </StackPanel>
            </ScrollViewer>
        </Border>
        
        <Border Grid.Row="1" Background="#3b3b3b" Grid.ColumnSpan="3">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0"  HorizontalAlignment="Stretch" Style="{DynamicResource MainBtns}">
                    <Button Name="AddModelButton" Content="Добавить" Background="Transparent" FontSize="16" HorizontalContentAlignment="Center" BorderThickness="0" Click="AddButton" Margin="-2,0,2,0"></Button>
                </Border>
                <Border Grid.Column="1" x:Name="Remove"  HorizontalAlignment="Stretch" Style="{DynamicResource MainBtns}" IsEnabled="False">
                    <Button Name="RemoveModelButton" Content="Удалить" Background="Transparent" FontSize="16" HorizontalContentAlignment="Center" BorderThickness="0" Click="RemoveButton"></Button>
                </Border>
                <Border x:Name="Edit" Grid.Column="2" HorizontalAlignment="Stretch" Style="{DynamicResource MainBtns}" IsEnabled="False">
                    <Button Name="EditModelButton" Content="Редактировать" HorizontalContentAlignment="Center" FontSize="16" Background="Transparent" BorderThickness="0" Click="EditClick">

                    </Button>
                </Border>
                <Border Grid.Column="3"  HorizontalAlignment="Stretch" Style="{DynamicResource MainBtns}">
                    <Button Name="CopyModelsButton" Content="Скопировать" FontSize="16" HorizontalContentAlignment="Center" Background="Transparent" BorderThickness="0" Click="CopyButton"></Button>
                </Border>
                <Border Grid.Column="4"  HorizontalAlignment="Stretch" Style="{DynamicResource MainBtns}">
                    <Button Name="ExportModelsButton" Content="Экспорт" FontSize="16" HorizontalContentAlignment="Center" Background="Transparent" BorderThickness="0" Click="ExportClick"></Button>
                </Border>


                <Border Grid.Column="5" HorizontalAlignment="Stretch" Style="{DynamicResource MainBtns}" BorderThickness="0" x:Name="ExtraButton" MouseLeave="ExtraButtonMouseLeave">
                    <Border.ContextMenu>
                        <ContextMenu BorderThickness="0" Foreground="Transparent" x:Name="ContextMenuOfExtraButton" Background="Transparent">
                            <ContextMenu.ItemContainerStyle>
                                <Style TargetType="MenuItem">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="MenuItem">
                                                <Border Style="{DynamicResource MainBtns}" BorderThickness="1" BorderBrush="White" Padding="5">
                                                    <Button FontSize="16" Tag="{TemplateBinding Tag}" HorizontalContentAlignment="Center" Click="ElementInExtraClicked" Background="Transparent" Command="{TemplateBinding Command}" Content="{TemplateBinding Header}" />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                            </ContextMenu.ItemContainerStyle>
                            <MenuItem Name="ExtraSynchronizeContextItem" Tag="1" Header="Синхронизация"/>
                            <MenuItem Name="ChangeLanguageItem" Tag="2" Header="Смена языка"/>
                            <MenuItem Name="SettingContextItem" Tag="3" Header="Настройки"/>
                            
                        </ContextMenu>
                    </Border.ContextMenu>
                    <Button Name="ExtraControlButton" Content="Дополнительные" FontSize="16" Click="ExtraButtonMouseClicked" HorizontalContentAlignment="Center" Background="Transparent" BorderThickness="0"></Button>
                </Border>

            </Grid>
        </Border>


        <ListView x:Name="AnimeList"  ItemContainerStyle="{DynamicResource MyStyle}" ScrollViewer.PanningRatio="0.5"  ScrollViewer.VerticalScrollBarVisibility="Hidden"
                  Grid.ColumnSpan="3" Grid.Row="2" Background="{DynamicResource ListBackgroundBrushColor}" Margin="5 0 5 0" Padding="5" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="#00000000" >
            
            <ListView.ItemTemplate>
                <DataTemplate >
                    <StackPanel HorizontalAlignment="Stretch">
                        <TextBlock FontSize="2.5"></TextBlock>
                        <StackPanel Orientation="Horizontal" >
                        
                            <Border Background="{DynamicResource BackgroundModelBrushColor}" CornerRadius="3" Padding="3" x:Name="PlaceBorder">
                                <TextBlock Text="{Binding Place, StringFormat='{}{0}.'}"  Foreground="{DynamicResource ForegroundBrushColor}" Background="Transparent"/>
                            </Border>
                            <TextBlock FontSize="2" Text="fFF" Opacity="0"></TextBlock>
                            <Image Source="/Images/rsz_watching.png" Visibility="{Binding Watching}" Stretch="Fill" MaxHeight="{Binding ElementName=PlaceBorder, Path=ActualHeight}"/>
                            <TextBlock FontSize="2" Text="fFF" Opacity="0"></TextBlock>

                            <TextBox IsReadOnly="True" Text="{Binding Name}" HorizontalAlignment="Stretch" BorderThickness="0" Background="Transparent" Foreground="{Binding Path=Brush}" TextWrapping="Wrap"/>
                            
                        </StackPanel>
                        <TextBlock FontSize="2.5"></TextBlock>
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <Border x:Name="Editing" Grid.Row="2" Grid.Column="2" Background="{DynamicResource BackgroundEditBrushColor}" Opacity="0" Visibility="Hidden">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="8*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <StackPanel>
                    <Border Background="{DynamicResource BackgroundEditingBrushColor}" CornerRadius="0, 0, 4, 4" Padding="4">
                        <TextBox IsReadOnly="True" Foreground="{DynamicResource ForegroundBrushColor}" Background="Transparent" HorizontalAlignment="Center" BorderThickness="0" Text="{Binding ElementName=ActualName, Path=Text}" FontSize="24" VerticalAlignment="Center"></TextBox>
                    </Border>
                    
                    <TextBlock Text="gap" Opacity="0"></TextBlock>
                    <TextBlock Name="EditingNameBlock" Text="Название:" Foreground="{DynamicResource ForegroundBrushColor}" TextAlignment="Center" FontSize="20"></TextBlock>
                    <TextBlock Text="gap" Opacity="0" FontSize="12"></TextBlock>
                    <Border Background="{DynamicResource InputBoxBrushColor}" CornerRadius="4" Padding="4">
                        <TextBox CaretBrush="{DynamicResource ForegroundBrushColor}" x:Name="ActualName" HorizontalAlignment="Center" Foreground="{DynamicResource ForegroundBrushColor}" FontSize="18" VerticalAlignment="Center" Background="Transparent" BorderThickness="0"></TextBox>
                    </Border>
                    <TextBlock Text="gap" Opacity="0"></TextBlock>
                    <TextBlock Name="EditingPlaceBlock"  Text="Место:" TextAlignment="Center" FontSize="20" Foreground="{DynamicResource ForegroundBrushColor}"></TextBlock>
                    <TextBlock Text="gap" Opacity="0" FontSize="12" ></TextBlock>
                    <Border Background="{DynamicResource InputBoxBrushColor}" CornerRadius="4" Padding="4">
                        <TextBox CaretBrush="{DynamicResource ForegroundBrushColor}" x:Name="ActualPlace" Foreground="{DynamicResource ForegroundBrushColor}" HorizontalAlignment="Center" FontSize="18" VerticalAlignment="Center" Background="Transparent" BorderThickness="0"></TextBox>
                    </Border>
                    <TextBlock Text="gap" Opacity="0"></TextBlock>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock Name="EditingWatchedBlock"  Foreground="{DynamicResource ForegroundBrushColor}" Text="Просмотрено: " TextAlignment="Center" FontSize="20"></TextBlock>
                        <Border Background="{DynamicResource InputBoxBrushColor}" CornerRadius="5" Width="25" Height="25" BorderThickness="1" Name="ParentCheckBox">
                            <CheckBox x:Name="ActualStatus" HorizontalAlignment="Center" Padding="8" Foreground="White" MouseEnter="CheckBoxMouseEnter" MouseLeave="CheckBoxMouseLeave" FontSize="18" VerticalAlignment="Center" Background="Transparent" BorderThickness="0">
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrushColor}"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource ForegroundBrushColor}"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type CheckBox}">
                                                    <BulletDecorator Background="Transparent">
                                                        <BulletDecorator.Bullet>
                                                            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                                                <Path x:Name="CheckMark" Stroke="{DynamicResource ForegroundBrushColor}" StrokeThickness="2" Data="M 0 4 L 4 8 L 8 0"/>
                                                            </Grid>
                                                        </BulletDecorator.Bullet>
                                                        <ContentPresenter Margin="0,0,0,0" 
                                  VerticalAlignment="Center" 
                                  HorizontalAlignment="Center" 
                                  RecognizesAccessKey="True"/>
                                                    </BulletDecorator>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                                        </Trigger>
                                                        <Trigger Property="IsChecked" Value="False">
                                                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="CheckMark" Property="Stroke" Value="#AFAFAF"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                        </Border>
                    </StackPanel>
                </StackPanel>
                <Border Grid.Row="1" Background="{DynamicResource ButtonDisabledBackgroundBrushColor}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,15,0" CornerRadius="0, 0, 4, 4" Padding="4">
                    <Button Name="EditingSaveChangesButton" Background="Transparent" Content="Сохранить" Click="SaveClick"></Button>
                </Border>
            </Grid>
        </Border>

        <Border  BorderBrush="Black" BorderThickness="0, 0.8, 0, 0" Grid.ColumnSpan="3" Grid.Row="2"/>
        <Border Grid.Row="3" Background="{DynamicResource VersionMenuBrushColor}" Grid.ColumnSpan="3" Cursor="Hand" MouseDown="VersionMouseDown">
            <TextBlock Margin="10, 0" x:Name="VersionControl" Text="Version" FontSize="14" Foreground="#919191"/>
        </Border>
        
        <Border Grid.RowSpan="3" Visibility="Hidden" Grid.ColumnSpan="3" x:Name="CopiedMark" Background="#3d3d3d" CornerRadius="5" Opacity="0" VerticalAlignment="Top" HorizontalAlignment="Left">
            <TextBlock Name="CopiedPopupMessage" Text="Скопировано" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>

        <Border x:Name="Synchronize" MaxWidth="500" Grid.ColumnSpan="3" BorderBrush="Black" BorderThickness="1" Grid.RowSpan="4" Margin="30, -2000, 30, 30" Background="{DynamicResource BackgroundLightBrushColor}" CornerRadius="15" HorizontalAlignment="Center" VerticalAlignment="Center" MinWidth="600" Padding="10">
            <StackPanel>
                <Grid>
                    <Border Style="{DynamicResource MainBtns}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10" Padding="10 5 10 5" MouseDown="BackButtonOnWiFiPanelClicked" CornerRadius="20">
                        <TextBlock Name="SynchronizeBackButton" Foreground="{DynamicResource ForegroundBrushColor}" Text="Назад"/>
                    </Border>
                    <Border  HorizontalAlignment="Center" VerticalAlignment="Center" Width="200" Height="200" Margin="0, 20, 0, 0" CornerRadius="100" Background="White">
                        <Grid>
                            <Image Source="/Images/wifiimg.png" Stretch="Fill" VerticalAlignment="Center" Opacity="1" Margin="-15" HorizontalAlignment="Center">

                            </Image>
                        </Grid>
                    </Border>
                </Grid>
                <TextBlock Name="SynchronizePageTitle" Foreground="{DynamicResource ForegroundBrushColor}" Text="Синхронизация по Wi-Fi" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 10 0 0" TextWrapping="Wrap" FontSize="30"/>
                <TextBlock Name="SynchronizePageHelp" Foreground="{DynamicResource ForegroundBrushColor}" TextWrapping="WrapWithOverflow" Background="Transparent" FontStyle="Italic" TextAlignment="Center" Text="Для синхронизации по Wi-Fi требуется подключение к общей сети. Для подключения введите следующий код на втором устройстве:" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10"  FontSize="16"/>
                <Border Background="{DynamicResource InputBoxBrushColor}">
                    <TextBox IsReadOnly="True" x:Name="LocalWifiCode" Foreground="{DynamicResource ForegroundBrushColor}" Text="C0denE" Background="Transparent" BorderThickness="0" TextAlignment="Center" FontSize="40" FontWeight="DemiBold"/>
                </Border>
                <TextBlock Name="SynchronizePageOtherwise" FontSize="20" Foreground="{DynamicResource ForegroundBrushColor}" Text="Или же, введите уже имеющийся код в поле ниже:" Margin="10" TextAlignment="Center" FontStyle="Italic"/>
                <TextBox x:Name="WiFiCodeEntering" Foreground="{DynamicResource ForegroundBrushColor}" Background="{DynamicResource InputBoxBrushColor}" FontSize="20" Margin="0 10 0 10" HorizontalAlignment="Center" Width="300" Padding="0 5 0 5"/>
                <Border VerticalAlignment="Center"  HorizontalAlignment="Center" Style="{DynamicResource MainBtns}" CornerRadius="15" Padding="15, 5">
                    <Button Name="SynchronizePageEnterButton" Foreground="{DynamicResource ForegroundBrushColor}" Content="Ввести" Background="Transparent" Padding="5"  Click="EnteredWiFiCode" FontSize="30"/>
                </Border>
            </StackPanel>
        </Border>

        <Border x:Name="NewContentPanel" Visibility="Hidden" Opacity="1" Grid.RowSpan="4" Grid.ColumnSpan="3" Background="#bb000000">
            <Border Margin="180 80"  Background="{DynamicResource WindowBackgroundBrushColor}" CornerRadius="10" BorderThickness="15" BorderBrush="{DynamicResource VersionMenuBrushColor}" Padding="20">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Disabled" Grid.Row="0">
                        <StackPanel Orientation="Vertical" x:Name="ContentPanel" Margin="0 0 0 10">
                            <TextBlock x:Name="TitleUpdate" Foreground="{DynamicResource ForegroundBrushColor}" FontWeight="Bold" FontSize="20" TextWrapping="Wrap" TextAlignment="Center" HorizontalAlignment="Center"/>
                            <TextBox MaxLines="999" Foreground="{DynamicResource ForegroundBrushColor}" IsReadOnly="True" x:Name="DescriptionUpdate" FontSize="15" TextWrapping="WrapWithOverflow" BorderThickness="0" TextAlignment="Left" HorizontalAlignment="Left" Background="Transparent" Margin="2, 12, 2, 0"/>
                        </StackPanel>
                    </ScrollViewer>
                    <Border Grid.Row="1" VerticalAlignment="Center" Style="{DynamicResource MainBtns}" Margin="20,0,20,0" CornerRadius="8" Padding="4">
                        <Button x:Name="UnderstoodButton" Content="Понятно" FontSize="20" Background="Transparent" BorderThickness="0" Click="UnderstoodClick"/>
                    </Border>
                </Grid>
            </Border>
        </Border>
    </Grid>
    <Window.Resources>

        <SolidColorBrush x:Key="ModelForeground" Color="{DynamicResource ExtraForeground}"/>
        <SolidColorBrush x:Key="WindowBackgroundBrushColor" Color="{DynamicResource BackgroundDarkerColor}"/>
        <SolidColorBrush x:Key="VersionMenuBrushColor" Color="{DynamicResource BackgroundMoreDarkerColor}"/>
        <SolidColorBrush x:Key="ForegroundBrushColor" Color="{DynamicResource ForegroundColor}"/>
        <SolidColorBrush x:Key="ForegroundDisabledBrushColor" Color="{DynamicResource ForegroundDisabledColor}"/>
        <SolidColorBrush x:Key="BackgroundModelBrushColor" Color="{DynamicResource BackgroundModelColor}"/>
        <SolidColorBrush x:Key="BackgroundEditingBrushColor" Color="{DynamicResource BackgroundEditingColor}"/>
        <SolidColorBrush x:Key="BackgroundEditBrushColor" Color="{DynamicResource BackgroundEditColor}"/>
        <SolidColorBrush x:Key="BackgroundLightBrushColor" Color="{DynamicResource BackgroundLightColor}"/>
        <SolidColorBrush x:Key="ListBackgroundBrushColor" Color="{DynamicResource BackgroundColor}"/>
        <SolidColorBrush x:Key="InputBoxBrushColor" Color="{DynamicResource InputBoxColor}"/>
        <SolidColorBrush x:Key="ButtonEnabledBackgroundBrushColor" Color="{DynamicResource ButtonEnabledBackgroundColor}"/>
        <SolidColorBrush x:Key="ButtonSelectedBackgroundBrushColor" Color="{DynamicResource ButtonSelectedBackgroundColor}"/>
        <SolidColorBrush x:Key="ButtonDisabledBackgroundBrushColor" Color="{DynamicResource ButtonDisabledBackgroundColor}"/>

        <SolidColorBrush x:Key="MidBrsh" Color="{DynamicResource MidColor}"/>

        <SolidColorBrush x:Key="TabActiveBrush" Color="{DynamicResource TabActiveColor}"/>
        <SolidColorBrush x:Key="TabPassiveBrush" Color="{DynamicResource TabPassiveColor}"/>

        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Foreground" Value="{DynamicResource ModelForeground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid Name="Root" Height="27" Background="{DynamicResource MidBrsh}">
                            <ContentPresenter Name="HeaderHost" Margin="10,0,10,0" ContentSource="Header" RecognizesAccessKey="True" HorizontalAlignment="Left" VerticalAlignment="Center"
                                              TextOptions.TextRenderingMode="ClearType" TextBlock.FontSize="8" TextBlock.Foreground="{TemplateBinding Foreground}" TextOptions.TextFormattingMode="Display"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Root" Property="Background" Value="#505050"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Root" Property="Background" Value="#808080"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Storyboard x:Key="AppearBoard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NewContentPanel">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="DisappearBoard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NewContentPanel">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="AppearStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CopiedMark">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="DisappearStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CopiedMark">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>


        <Style TargetType="TextBox">
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="CaretBrush" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"></Setter>
            <Setter Property="FontSize" Value="20"/>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Green"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <TextBlock Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontFamily" Value="Verdana"/>
                                        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrushColor}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource TemplatedParent }}" Value="True">
                                                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrushColor}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource TemplatedParent }}" Value="False">
                                                <Setter Property="Foreground" Value="{DynamicResource ForegroundDisabledBrushColor}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MainBtns" TargetType="Border">
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsEnabled" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource ButtonSelectedBackgroundBrushColor}"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="False"/>
                        <Condition Property="IsEnabled" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource ButtonEnabledBackgroundBrushColor}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource ButtonDisabledBackgroundBrushColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ComboBoxMains" TargetType="ComboBox">
            <Setter Property="Background" Value="#232323"/>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsEnabled" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="#222222"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="False"/>
                        <Condition Property="IsEnabled" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="#1a1a1a"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#121212"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
</Window>
