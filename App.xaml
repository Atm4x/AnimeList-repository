<Application x:Class="AnimeList.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:AnimeList"
             StartupUri="Windows/ControlWindow.xaml"
             xmlns:converters="clr-namespace:AnimeList.Converters">
    <Application.Resources>
        <converters:IntToVisibility x:Key="IntToVis" TrueValue="Hidden" FalseValue="Visible" Int="0"/>
        <converters:StringEmptyToVisibility x:Key="StrEmptyToVis" TrueValue="Hidden" FalseValue="Visible"/>
        <converters:IntToPixels x:Key="IntToPix" TrueValue="0" FalseValue="100"/>
        <Color x:Key="ForegroundColor">White</Color>
        <SolidColorBrush x:Key="ForegroundBrush" Color="{DynamicResource ForegroundColor}"/>
        <Color x:Key="ForegroundWatchingColor">Khaki</Color>
        <Color x:Key="ExtraForeground">#BEBEBE</Color>
        <Color x:Key="InputBoxColor">#2c2c2c</Color>
        <!--<SolidColorBrush x:Key="ForegroundWatchingBrush" Color="{DynamicResource ForegroundWatchingColor}"/>-->
        <Color x:Key="ForegroundDisabledColor">Gray</Color>
        <Color x:Key="BackgroundDarkerColor">#1e1e1e</Color>
        <Color x:Key="BackgroundMoreDarkerColor">#121212</Color>
        <Color x:Key="BackgroundModelColor">#333333</Color>
        <Color x:Key="BackgroundColor">#2b2b2b</Color>
        <Color x:Key="BackgroundEditingColor">#1f1f1f</Color>
        <Color x:Key="BackgroundEditColor">#363636</Color>
        <Color x:Key="FindingColor">#55f44931</Color>
        <FontFamily x:Key="MainFont">
            Arial
        </FontFamily>
        <Style TargetType="AccessText">
            <Setter Property="FontFamily" Value="{StaticResource MainFont}"/>
        </Style>
        <Color x:Key="BackgroundLightColor">#515151</Color>
        <!--<SolidColorBrush x:Key="InputBoxBrushColor" Color="{DynamicResource InputBoxColor}"/>-->


        <!--<SolidColorBrush x:Key="ListBackgroundBrushColor" Color="{DynamicResource BackgroundColor}"/>-->

        <Color x:Key="TabActiveColor">#3b3b3b</Color>
        <SolidColorBrush x:Key="TabActiveBrush" Color="{DynamicResource TabActiveColor}"/>
        <Color x:Key="TabPassiveColor">#262626</Color>
        <SolidColorBrush x:Key="TabPassiveBrush" Color="{DynamicResource TabPassiveColor}"/>


        <Color x:Key="ButtonDisabledBackgroundColor">#121212</Color>
        <Color x:Key="ButtonSelectedBackgroundColor">#222222</Color>
        <Color x:Key="ButtonEnabledBackgroundColor">#1a1a1a</Color>

        <Color x:Key="MidColor">#202020</Color>
        <SolidColorBrush x:Key="MidBrsh" Color="{DynamicResource MidColor}"/>
        <Style TargetType="TextBlock">
             <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"></Setter>
             <Setter Property="FontSize" Value="20"/>
         </Style>
        <Style x:Key="MenuItemStyle" TargetType="{x:Type ContextMenu}">
            
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="FontSize" Value="8"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Grid Background="Transparent">
                            <Border Margin="10,10,0, 0" Background="{DynamicResource MidBrsh}" BorderThickness="0">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="2"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        


        <Style TargetType="Button">
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"></Setter>
            
        </Style>
        <Style TargetType="PasswordBox">
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="CaretBrush" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"></Setter>
            <Setter Property="FontSize" Value="24"/>
        </Style>
        <Style x:Key="MyStyle" TargetType="ListViewItem">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>




        <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <SolidColorBrush x:Key="NormalBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF686868" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />

        <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="White" Offset="0.0" />
                    <GradientStop Color="White" Offset="0.6" />
                    <GradientStop Color="#DDDDDD" Offset="1.2"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" Margin="1" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>

            <Setter Property="Width" Value="10"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Black" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"  MinWidth="8"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid Width="10">
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="0"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="0"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid Height="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="0"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="0"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="Transparent"/>
                <RepeatButton Grid.Column="0"  Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="10" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="10"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter Grid.Row="0" Grid.Column="0"/>

                            <ScrollBar 
                        Name="PART_VerticalScrollBar" 
                        Grid.Row="0" 
                        Grid.Column="1" 
                        Value="{TemplateBinding VerticalOffset}" 
                        Maximum="{TemplateBinding ScrollableHeight}" 
                        ViewportSize="{TemplateBinding ViewportHeight}" 
                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                            <ScrollBar 
                        Name="PART_HorizontalScrollBar" 
                        Orientation="Horizontal" 
                        Grid.Row="1" 
                        Grid.Column="0" 
                        Value="{TemplateBinding HorizontalOffset}" 
                        Maximum="{TemplateBinding ScrollableWidth}" 
                        ViewportSize="{TemplateBinding ViewportWidth}" 
                        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                            <!-- Explicitly add the corner element -->
                            <Rectangle 
                        Grid.Row="1" 
                        Grid.Column="1" 
                        Fill="{StaticResource StandardBackgroundBrush}" 
                        Width="{Binding ActualWidth, ElementName=PART_VerticalScrollBar}" 
                        Height="{Binding ActualHeight, ElementName=PART_HorizontalScrollBar}" 
                        Visibility="{Binding Visibility, ElementName=PART_HorizontalScrollBar}"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ToolTip}"
       TargetType="{x:Type ToolTip}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Placement" Value="Left"/>
        </Style>
    </Application.Resources>
</Application>
